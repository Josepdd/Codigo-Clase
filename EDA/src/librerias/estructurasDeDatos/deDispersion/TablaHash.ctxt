#BlueJ class context
comment0.params=inicial
comment0.target=TablaHash(int)
comment0.text=\ Crea\ una\ Tabla\ Hash\ vacia,\ con\ una\ capacidad\ (inicial)\ m\u00E1xima\ \ \n\ \ de\ tallaMaximaEstimada\ entradas\ y\ factor\ de\ carga\ 0.75\n\ @param\ inicial\ Capacidad\ para\ la\ Tabla\ Hash\ que\ se\ va\ a\ crear\n
comment1.params=n
comment1.target=int\ siguientePrimo(int)
comment10.params=
comment10.target=void\ rehashing()
comment11.params=
comment11.target=librerias.estructurasDeDatos.modelos.ListaConPI\ claves()
comment11.text=\ \n\ Devuelve\ una\ ListaConPI\ con\ las\ talla()\ claves\ de\ una\ Tabla\ Hash\n\ @return\ Lista\ con\ el\ conjunto\ de\ todas\ las\ Claves\ de\ la\ Tabla.\n
comment12.params=
comment12.target=double\ desviacionTipica()
comment12.text=\ \n\ Calcula\ la\ desviacion\ tipica\ de\ las\ longitudes\ de\ las\ listas\n\ @return\ Desviaci\u00F3n\ t\u00EDpica\ de\ la\ tabla.\n
comment13.params=
comment13.target=java.lang.String\ histograma()
comment13.text=\ Devuelve\ un\ String\ que\ representa\ el\ histograma\ de\ ocupacion\:\n\ lineas,\ cada\ una\ de\ ellas\ con\ dos\ valores\:\ \n\ longitudCubeta\tNumeroDeCubetas\ \n\ donde\:\n\ -\ las\ lineas\ 0\ a\ 8\ contienen\ el\ numero\ de\ cubetas\ de\ esa\ longitud,\ \n\ \ \ 0<\=longitud<9\n\ la\ ultima\ linea\ (9)\ contiene\ el\ numero\ de\ cubetas\ de\ longitud\ 9\ o\ mas\n
comment14.params=
comment14.target=int\ masDeLaMedia()
comment14.text=public\ ListaConPI<C>\ clavesConValor(V\ valor){\n\ \ \ \ \ \ \ ListaConPI<C>\ res\ \=\ new\ LEGListaConPI<>();\n\ \ \ \ \ \ \ for(int\ i\=0;\ i<elArray.length;\ i++){\n\ \ \ \ \ \ \ \ \ \ \ EntradaHash<C,V>\ e\ \=\ (EntradaHash<C,V>)\ elArray[i];\n\ \ \ \ \ \ \ \ \ \ \ while\ (e\!\=null){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(e.valor.equals(valor)){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ res.insertar(e.clave);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ e\ \=\ e.siguiente;\n\ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ return\ res;\n\ \ \ \ }\n\ \ \ \ \n\ \ \ \ public\ Map<C,V>\ interseccion(Map<C,V>\ otro){\n\ \ \ \ \ \ \ \ Map<C,V>\ res\ \=\ new\ TablaHash<C,V>(Math.min(talla,otro.talla()));\n\ \ \ \ \ \ \ \ for(int\ i\=0;\ i<elArray.length;\ i++){\n\ \ \ \ \ \ \ \ \ \ \ \ EntradaHash<C,V>\ e\ \=\ (EntradaHash<C,V>)\ elArray[i];\n\ \ \ \ \ \ \ \ \ \ \ \ while(e\!\=null){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ V\ valor\ \=\ otro.recuperar(e.clave);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(valor\ \!\=\ null\ &&\ valor.equals(e.valor)){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ res.insertar(e.clave,\ e.valor);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ e\ \=\ e.siguiente;\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ return\ res;\n}
comment2.params=n
comment2.target=boolean\ esPrimo(int)
comment3.params=c
comment3.target=int\ indiceHash(java.lang.Object)
comment4.params=c
comment4.target=java.lang.Object\ recuperar(java.lang.Object)
comment4.text=\ Devuelve\ el\ valor\ de\ la\ entrada\ con\ clave\ c,\n\ \ o\ null\ si\ no\ hay\ una\ entrada\ con\ clave\ c\ en\ la\ Tabla\n\ @param\ c\ Clave\ de\ la\ que\ se\ quiere\ obtener\ el\ Valor\n\ @return\ Valor\ obtenido\ de\ la\ clave,\ o\ null\ si\ no\ existe.\n
comment5.params=c
comment5.target=java.lang.Object\ eliminar(java.lang.Object)
comment5.text=\ Elimina\ la\ entrada\ con\ clave\ c\ y\ devuelve\ su\ valor\ \n\ \ asociado,\ o\ null\ si\ no\ hay\ ninguna\ entrada\ con\ clave\ c\ \n\ @param\ c\ Clave\ que\ se\ quiere\ eliminar.\n\ @return\ Valor\ que\ contenia\ la\ clave\ eliminada,\ o\ null\ si\ no\ existe.\n
comment6.params=c\ v
comment6.target=java.lang.Object\ insertar(java.lang.Object,\ java.lang.Object)
comment6.text=\ Inserta\ la\ entrada\ (c,\ v)\ \ a\ una\ Tabla\ Hash\ y\ devuelve\ \ \n\ \ el\ antiguo\ valor\ asociado\ a\ c,\ o\ null\ si\ no\ hay\ ninguna\ \n\ \ entrada\ con\ clave\ c\ en\ la\ Tabla\n\ @param\ c\ Clave\ que\ se\ quiere\ insertar\n\ @param\ v\ Valor\ asociado\ a\ la\ Clave\ a\ insertar\n\ @return\ Valor\ que\ contenia\ la\ clave,\ o\ null\ si\ no\ estaba\ en\ la\ Tabla.\n
comment7.params=
comment7.target=boolean\ esVacio()
comment7.text=\ \n\ Comprueba\ si\ una\ Tabla\ Hash\ esta\ vacia,\ i.e.\ si\ tiene\ 0\ entradas.\n\ @return\ \ True\ -\ Si\ la\ Tabla\ est\u00E1\ vacia.\ False\ -\ Si\ la\ tabla\ NO\ est\u00E1\ vac\u00EDa.\n
comment8.params=
comment8.target=int\ talla()
comment8.text=\ \n\ Devuelve\ la\ talla,\ o\ numero\ de\ entradas,\ de\ una\ Tabla\ Hash.\n\ @return\ Talla\ de\ la\ Tabla\n
comment9.params=
comment9.target=double\ factorCarga()
comment9.text=\ Devuelve\ el\ factor\ de\ carga\ actual\ de\ una\ Tabla\ Hash,\ i.e.\ la\ longitud\n\ \ media\ de\ sus\ cubetas\n\ @return\ Factor\ de\ Carga\ de\ una\ Tabla\ Hash.\n
numComments=15
